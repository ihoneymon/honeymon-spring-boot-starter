buildscript {	
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = 'io.honeymon.boot.antipang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8


repositories {
	mavenCentral()
}


dependencies {
	compile project(":antipang-spring-boot-starter")
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	/**
	 * @ConfigurationProperties 을 사용하려면 있는게 좋다...고?
	 * configuration metadat 를 만들려면 필요함
	 * App 구성 편집기에서 자동완성 지원
	 */
	compile('org.springframework.boot:spring-boot-configuration-processor')
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	
	
 	compile('org.springframework.boot:spring-boot-starter-data-jpa') {
 		exclude module: "tomcat-jdbc"
 	}
 	compile("com.zaxxer:HikariCP")
 	/**
	 * Embedded DataBase 가 포함되어 있는 경우 JPA는 Embedded DataBase를 in-memory 로 설정한다.
	 */
	runtime("com.h2database:h2")
}

compileJava.dependsOn(processResources)

/**
 * bootRun 태스크에서 시스템속성 `-D{properties}={value}` 적용
 */
bootRun {
    systemProperties System.properties
}

